<?xml version="1.0"?>
<thlogic>
    <attr sel="#header" th:replace="header :: header" />
    <attr sel="#footer" th:replace="footer :: footer" />

    <attr sel="main" th:object="${articles}">

        <!--
            1. id = article-table element 고른상태
                <attr sel="#article-table"></attr>
            2. 1의 상태(element)에서 tbody라는 element를 골라서 첫째 element만 남기고 나머지 제외한 상태
                <attr sel="#article-table">
                    <attr sel="tbody" th:remove="all-but-first"></attr>
                </attr>
            3. 2의 상태에서 tr[0] element에 반복문 코드를 추가.
                <attr sel="#article-table">
                    <attr sel="tbody" th:remove="all-but-first">
                        <attr sel="tr[0]" th:each="article : ${articles}">
                            <attr sel="td.title/a" th:text="${article.title}" th:href="@{'/articles/' + ${article.id}}" />
                            <attr sel="td.hashtag" th:text="${article.hashtag}"/>
                            <attr sel="td.user-id" th:text="${article.nickname}" />
                            <attr sel="td.created-at/time" th:datetime="${article.createdAt}" th:text="${#temporals.format(article.createdAt, 'yyyy-MM-dd')}" />
                        </attr>
                    </attr>
                </attr>
        -->


        <attr sel="#article-table">
            <!--
                실제로 pageable이 영향을 끼치는 것은 repository layer이다. 거기서 Page<article>을 반환하므로 article domain내의 field를 참조해야한다.
            -->
            <attr sel="thead/tr">
                <attr sel="th.title/a" th:text="'제목'" th:href="@{/articles(
            page=${articles.number},
            sort='title' + (*{sort.getOrderFor('title')} != null ? (*{sort.getOrderFor('title').direction.name} != 'DESC' ? ',desc' : '') : '')
        )}"/>
<!--
http://localhost:8080/articles?page=7&sort=title,desc <- asc일경우 또는 어쨋든 마구잡이일경우, desc가 아니기때문에, ,desc가 추가되어 정렬을 바꾸어준다.
http://localhost:8080/articles?page=7&sort=title  <- 이 경우, 기본 default 세팅인 createdAt을 기준으로 desc가 내려진다.
원래는 sort가 createdAt을 기준으로 desc로 되어 있는데, 이것을 title로 바꾸고 title의 order가 desc가 아니면 desc로 하라는뜻.
이미 sort가 title이면서, desc이면, sort를 desc없이 title로 하라는뜻 그러니까 기본 asc. chatgpt에 물어보니 기본이 asc라고함.
여기서 *{sort}는 ArticleController.java에서 page의 형태인 articles을 내려줄때 포함되어 있다.
-->
                <attr sel="th.hashtag/a" th:text="'해시태그'" th:href="@{/articles(
            page=${articles.number},
            sort='hashtags' + (*{sort.getOrderFor('hashtags')} != null ? (*{sort.getOrderFor('hashtags').direction.name} != 'DESC' ? ',desc' : '') : '')
        )}"/>
                <attr sel="th.user-id/a" th:text="'작성자'" th:href="@{/articles(
            page=${articles.number},
            sort='userAccount.userId' + (*{sort.getOrderFor('userAccount.userId')} != null ? (*{sort.getOrderFor('userAccount.userId').direction.name} != 'DESC' ? ',desc' : '') : '')
        )}"/>
                <attr sel="th.created-at/a" th:text="'작성일'" th:href="@{/articles(
            page=${articles.number},
            sort='createdAt' + (*{sort.getOrderFor('createdAt')} != null ? (*{sort.getOrderFor('createdAt').direction.name} != 'DESC' ? ',desc' : '') : '')
        )}"/>
            </attr>

            <attr sel="tbody" th:remove="all-but-first">
                <attr sel="tr[0]" th:each="article : ${articles}">
                    <attr sel="td.title/a" th:text="${article.title}" th:href="@{'/articles/' + ${article.id}}" />
                    <attr sel="td.hashtag" th:text="${article.hashtag}"/>
                    <attr sel="td.user-id" th:text="${article.nickname}" />
                    <attr sel="td.created-at/time" th:datetime="${article.createdAt}" th:text="${#temporals.format(article.createdAt, 'yyyy-MM-dd')}" />
                </attr>
            </attr>
        </attr>
        <!--
            th:class="'page-link' : 조건을만족하면 수행, articles.number<=0이면 이 attr을 disabled처리
        -->
        <attr sel="#pagination">
            <attr sel="li[0]/a"
                  th:text="'previous'"
                  th:href="@{/articles(page=${articles.number - 1})}"
                  th:class="'page-link' + (${articles.number} <= 0 ? ' disabled' : '')"
            />
            <attr sel="li[1]" th:class="page-item" th:each="pageNumber : ${paginationBarNumbers}">
                <attr sel="a"
                      th:text="${pageNumber + 1}"
                      th:href="@{/articles(page=${pageNumber})}"
                      th:class="'page-link' + (${pageNumber} == ${articles.number} ? ' disabled' : '')"
                />
            </attr>
            <attr sel="li[2]/a"
                  th:text="'next'"
                  th:href="@{/articles(page=${articles.number + 1})}"
                  th:class="'page-link' + (${articles.number} >= ${articles.totalPages - 1} ? ' disabled' : '')"
            />
        </attr>
    </attr>


</thlogic>